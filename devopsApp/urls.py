# -*- coding:utf-8 -*-
from django.conf.urls import url
from devopsApp.views import usermanage
from devopsApp.views import index
from devopsApp.views import hostmanage, application, zk_kafka, redisMange, delploy, hostAuth, dbMange
urlpatterns = [
    url(r'test/$', index.Test.as_view(), name='test'),
    url(r'^login/$', usermanage.Login.as_view(), name='login'),
    url(r'^logout/$', usermanage.Logout.as_view(), name='logout'),
    url(r'index/$', index.Index.as_view(), name='index'),
    url(r'error/$', index.error, name='error'),
    url(r'usermanagement/$', usermanage.UserManagement.as_view(), name='usermanagement'),
    url(r'userRegister/$', usermanage.UserRegister.as_view(), name='userRegister'),
    url(r'userModify/$', usermanage.UserModify.as_view(), name='userModify'),
    url(r'roleQuery/$', usermanage.RoleQuery.as_view(), name='roleQuery'),
    url(r'roleDelete/$', usermanage.RoleDelete.as_view(), name='roleDelete'),
    url(r'deleteUser/$', usermanage.DeleteUser.as_view(), name='deleteUser'),
    url(r'usermanagementRole/$', usermanage.UserManagementRole.as_view(), name='usermanagementRole'),
    url(r'permissions/$', usermanage.UserManagementPermissions.as_view(), name='permissions'),
    url(r'qdPermissions/$', usermanage.Permissions.as_view(), name='qdPermissions'),
    url(r'UserGrants/$', usermanage.UserGrants.as_view(), name='UserGrants'),
    url(r'RoleGrants/$', usermanage.RoleGrants.as_view(), name='RoleGrants'),
    url(r'HostManage/$', hostmanage.HostManage.as_view(), name='HostManage'),
    url(r'HostManageM/$', hostmanage.HostManageM.as_view(), name='HostManageM'),
    url(r'HostChangePassword/$', hostmanage.HostChangePassword.as_view(), name='HostChangePassword'),
    url(r'Application/$', application.Application.as_view(), name='Application'),
    url(r'ApplicationRestart/$', application.ApplicationRestart.as_view(), name='ApplicationRestart'),
    url(r'ApplicationRestartQuery/$', application.ApplicationRestartQuery.as_view(), name='ApplicationRestartQuery'),
    url(r'ApplicationNewOnline/$', application.ApplicationNewOnline.as_view(), name='ApplicationNewOnline'),
    url(r'ApplicationNewOnlineQuery/$', application.ApplicationNewOnlineQuery.as_view(), name='ApplicationNewOnlineQuery'),
    url(r'ApplicationRestartOne/$', application.ApplicationRestartOne.as_view(), name='ApplicationRestartOne'),
    url(r'ApplicationManage/$', application.ApplicationManage.as_view(), name='ApplicationManage'),
    url(r'ApplicationOffline/$', application.ApplicationOffline.as_view(), name='ApplicationOffline'),
    url(r'ApplicationOfflineQuery/$', application.ApplicationOfflineQuery.as_view(), name='ApplicationOfflineQuery'),
    url(r'ApplicationYJ/$', application.ApplicationYJ.as_view(), name='ApplicationYJ'),
    url(r'ZkKafka/$', zk_kafka.ZkKafka.as_view(), name='ZkKafka'),
    url(r'ZkKafkaUpdate/$', zk_kafka.ZkKafkaUpdate.as_view(), name='ZkKafkaUpdate'),
    url(r'ZkKafkaDelete/$', zk_kafka.ZkKafkaDelete.as_view(), name='ZkKafkaDelete'),
    url(r'KafkaMess/$', zk_kafka.KafkaMess.as_view(), name='KafkaMess'),
    url(r'CreateTopic/$', zk_kafka.CreateTopic.as_view(), name='CreateTopic'),
    url(r'DeleteTopic/$', zk_kafka.DeleteTopic.as_view(), name='DeleteTopic'),
    url(r'ReidsMange/$', redisMange.RedisMange.as_view(), name='ReidsMange'),
    url(r'RedisExcCom/$', redisMange.RedisExcCom.as_view(), name='RedisExcCom'),
    url(r'AddRedisCluster/$', redisMange.AddRedisCluster.as_view(), name='AddRedisCluster'),
    url(r'ModifyRedisCluster/$', redisMange.ModifyRedisCluster.as_view(), name='ModifyRedisCluster'),
    url(r'QueryRedisMess/$', redisMange.QueryRedisMess.as_view(), name='QueryRedisMess'),
    url(r'DeployTimeControl/$', delploy.ModifyDeployTime.as_view(), name='DeployTimeControl'),
    url(r'DeployJenkinsLock/$', delploy.DeployJenkinsLock.as_view(), name='DeployJenkinsLock'),
    url(r'DeployManage/$', delploy.DeployManage.as_view(), name='DeployManage'),
    url(r'GetDeployMess/$', delploy.GetDeployMess.as_view(), name='GetDeployMess'),
    url(r'InsertDeployOrder/$', delploy.InsertDeployOrder.as_view(), name='InsertDeployOrder'),
    url(r'OneleaderAgree/$', delploy.OneleaderAgree.as_view(), name='OneleaderAgree'),
    url(r'OneleaderIfAgreePost/$', delploy.OneleaderIfAgreePost.as_view(), name='OneleaderIfAgreePost'),
    url(r'TwoleaderAgree/$', delploy.TwoleaderAgree.as_view(), name='TwoleaderAgree'),
    url(r'TwoleaderIfAgreePost/$', delploy.TwoleaderIfAgreePost.as_view(), name='TwoleaderIfAgreePost'),
    url(r'DeployProject/$', delploy.DeployProject.as_view(), name='DeployProject'),
    url(r'DeployProjectTest/$', delploy.DeployProjectTest.as_view(), name='DeployProjectTest'),
    url(r'SubmitDeployJob/$', delploy.SubmitDeployJob.as_view(), name='SubmitDeployJob'),
    url(r'QueryJobsResult/$', delploy.QueryJobsResult.as_view(), name='QueryJobsResult'),
    url(r'DeployOrderDownload/$', delploy.DeployOrderDownload.as_view(), name='DeployOrderDownload'),
    url(r'NeedOrderModify/$', delploy.NeedOrderModify.as_view(), name='NeedOrderModify'),
    url(r'HostPowerApi/$', hostAuth.HostPowerApi.as_view(), name='HostPowerApi'),
    url(r'HostPowerQuery/$', hostAuth.HostPowerQuery.as_view(), name='HostPowerQuery'),
    url(r'HostPowerAdminQuery/$', hostAuth.HostPowerAdminQuery.as_view(), name='HostPowerAdminQuery'),
    url(r'HostPowerApply/$', hostAuth.HostPowerApply.as_view(), name='HostPowerApply'),
    url(r'HostPowerApplyVerifyStatus/$', hostAuth.HostPowerApplyVerifyStatus.as_view(), name='HostPowerApplyVerifyStatus'),
    url(r'HostPowerApplyVerify/$', hostAuth.HostPowerApplyVerify.as_view(), name='HostPowerApplyVerify'),
    url(r'HostPowerApplyManager/$', hostAuth.HostPowerApplyManager.as_view(), name='HostPowerApplyManager'),
    url(r'DBMange/$', dbMange.DBMange.as_view(), name='DBMange'),
    url(r'QueryDb/$', dbMange.QueryDb.as_view(), name='QueryDb'),
    url(r'DbSqlApply/$', dbMange.DbSqlApply.as_view(), name='DbSqlApply'),
    url(r'SqlOrderRelease/$', dbMange.SqlOrderRelease.as_view(), name='SqlOrderRelease'),
    url(r'SqlGroupLeaderApprove/$', dbMange.SqlGroupLeaderApprove.as_view(), name='SqlGroupLeaderApprove'),
    url(r'SqlDbaApprove/$', dbMange.SqlDbaApprove.as_view(), name='SqlDbaApprove'),
    url(r'SqlDbaExc/$', dbMange.SqlDbaExc.as_view(), name='SqlDbaExc'),
    url(r'SqlExc/$', dbMange.SqlExc.as_view(), name='SqlExc'),
]

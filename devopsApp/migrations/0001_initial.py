# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-09-02 18:33
from __future__ import unicode_literals

import datetime
import devopsApp.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'swappable': 'AUTH_USER_MODEL',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', devopsApp.models.MyUserManger()),
            ],
        ),
        migrations.CreateModel(
            name='BizlogAuth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('ip', models.CharField(max_length=100, null=True)),
                ('login_time', models.DateTimeField()),
                ('logout_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='DeployProjectApply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_class', models.CharField(max_length=100)),
                ('project_name', models.CharField(max_length=255)),
                ('deploy_username', models.CharField(max_length=100)),
                ('tamper_resistant_start_time', models.DateTimeField(blank=True, null=True)),
                ('tamper_resistant_end_time', models.DateTimeField(blank=True, null=True)),
                ('code_verify_name', models.CharField(max_length=100)),
                ('developers_name', models.CharField(max_length=255)),
                ('db_op', models.CharField(default=b'\xe5\x90\xa6', max_length=10)),
                ('operation_need_reasons', models.CharField(blank=True, max_length=255)),
                ('deploy_start_time', models.DateTimeField()),
                ('deploy_end_time', models.DateTimeField()),
                ('groupleader_name', models.CharField(max_length=100)),
                ('groupleader_agree', models.CharField(blank=True, max_length=10)),
                ('twolevelLeader_name', models.CharField(blank=True, max_length=100)),
                ('twolevelLeader_agree', models.CharField(blank=True, max_length=10)),
                ('deploy_result', models.CharField(max_length=10)),
                ('result', models.TextField(max_length=10000)),
            ],
        ),
        migrations.CreateModel(
            name='DeployTimeControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='DeployVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('deploy_project', models.CharField(max_length=100)),
                ('deploy_time', models.DateTimeField(default=datetime.datetime(2019, 9, 2, 18, 33, 30, 261000))),
                ('deploy_m5sum', models.CharField(max_length=100)),
                ('package_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=255, unique=True)),
                ('os_version', models.CharField(blank=True, max_length=255)),
                ('hostname', models.CharField(blank=True, max_length=255)),
                ('net_card_mes', models.CharField(blank=True, max_length=255)),
                ('cpu_num', models.IntegerField(default=0)),
                ('cpu_model', models.CharField(blank=True, max_length=255)),
                ('mem_total', models.BigIntegerField(default=0)),
                ('disk_num', models.IntegerField(default=0)),
                ('disk_mes', models.CharField(blank=True, max_length=255)),
                ('disk_total_volume', models.BigIntegerField(default=0)),
                ('root_password', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='JenkinsDeploy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('deploy_project', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='JenkinsDeployLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('deploy_project', models.CharField(max_length=255)),
                ('deploy_package_md5', models.CharField(max_length=100)),
                ('deploy_status', models.CharField(max_length=20)),
                ('deploy_start_time', models.DateTimeField(default=datetime.datetime(2019, 9, 2, 18, 33, 30, 260000))),
                ('deploy_end_time', models.DateTimeField(blank=True, null=True)),
                ('deploy_result', models.CharField(max_length=20)),
                ('deploy_error_mess', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('job_type', models.CharField(max_length=100)),
                ('job_id', models.CharField(max_length=100)),
                ('post_data', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='KafkaList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clustername', models.CharField(max_length=100)),
                ('ip', models.CharField(max_length=255)),
                ('base_path', models.CharField(max_length=100, null=True)),
                ('version', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OnelevelLeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupname', models.CharField(max_length=50)),
                ('leadername', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=255)),
                ('project_description', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Redis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clustername', models.CharField(max_length=100)),
                ('deploy_type', models.CharField(max_length=100)),
                ('ipaddr', models.TextField(max_length=500)),
                ('base_path', models.CharField(max_length=50)),
                ('version', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('permissions', models.ManyToManyField(to='devopsApp.Permissions')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=255)),
                ('service_alias_name', models.CharField(blank=True, max_length=255)),
                ('type', models.CharField(max_length=128)),
                ('service_port', models.IntegerField()),
                ('jmx_port', models.IntegerField(default=0)),
                ('online_date', models.DateTimeField(default=datetime.datetime(2019, 9, 2, 18, 33, 30, 251000))),
                ('offline_date', models.DateTimeField(blank=True, null=True)),
                ('base_path', models.CharField(blank=True, max_length=255)),
                ('package_deploy_path', models.CharField(default=None, max_length=255)),
                ('package_name', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(max_length=20)),
                ('start_script', models.CharField(blank=True, max_length=255)),
                ('stop_script', models.CharField(blank=True, max_length=255)),
                ('log_path', models.CharField(blank=True, max_length=255)),
                ('service_conf_name', models.CharField(blank=True, max_length=255)),
                ('jenkin_service_conf_name', models.CharField(blank=True, max_length=255)),
                ('host', models.ManyToManyField(to='devopsApp.Host')),
                ('project_name', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='devopsApp.Project')),
            ],
        ),
        migrations.CreateModel(
            name='StaticService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=50)),
                ('tamper_resistant', models.CharField(max_length=10)),
                ('is_need_npm_package', models.CharField(max_length=10)),
                ('npm_package_commd', models.CharField(blank=True, max_length=255)),
                ('source_code_path', models.CharField(max_length=100)),
                ('target_code_path', models.CharField(max_length=100)),
                ('status', models.CharField(blank=True, default=b'online', max_length=20)),
                ('host', models.ManyToManyField(to='devopsApp.Host')),
            ],
        ),
        migrations.CreateModel(
            name='TwolevelLeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leadername', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='WorkOrderNeeds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('need_content', models.CharField(max_length=255)),
                ('product_manager_name', models.CharField(max_length=100)),
                ('deploy_time', models.DateField()),
                ('need_deploy_project', models.ManyToManyField(to='devopsApp.DeployProjectApply')),
            ],
        ),
        migrations.CreateModel(
            name='ZookeeperList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clustername', models.CharField(max_length=100)),
                ('ip', models.CharField(max_length=255)),
                ('base_path', models.CharField(max_length=100, null=True)),
                ('version', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='onelevelleader',
            name='leader',
            field=models.ManyToManyField(to='devopsApp.TwolevelLeader'),
        ),
        migrations.AddField(
            model_name='kafkalist',
            name='zk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devopsApp.ZookeeperList'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devopsApp.Role'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
